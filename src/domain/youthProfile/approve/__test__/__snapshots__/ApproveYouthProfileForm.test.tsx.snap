// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`matches snapshot 1`] = `
<ApproveYouthProfileForm
  isSubmitting={false}
  onSubmit={[MockFunction]}
  profile={
    Object {
      "additionalContactPersons": Array [],
      "address": "Testikuja 55, 00100 Helsinki",
      "addresses": Array [
        "Kymintie 43, 00100 Helsinki",
      ],
      "approverEmail": "ville.vanhempi@test.fi",
      "approverFirstName": "Ville",
      "approverLastName": "Vanhempi",
      "approverPhone": "05012345567",
      "birthDate": "2007-01-01",
      "email": "teemu.testaaja@test.fi",
      "firstName": "Teemu",
      "language": "FINNISH",
      "languageAtHome": "FINNISH",
      "lastName": "Testaaja",
      "phone": "050123467",
      "photoUsageApproved": "false",
      "schoolClass": "Luokka",
      "schoolName": "Koulu",
    }
  }
>
  <Formik
    enableReinitialize={true}
    initialValues={
      Object {
        "additionalContactPersons": Array [],
        "address": "Testikuja 55, 00100 Helsinki",
        "addresses": Array [
          "Kymintie 43, 00100 Helsinki",
        ],
        "approverEmail": "ville.vanhempi@test.fi",
        "approverFirstName": "Ville",
        "approverLastName": "Vanhempi",
        "approverPhone": "05012345567",
        "birthDate": "2007-01-01",
        "email": "teemu.testaaja@test.fi",
        "firstName": "Teemu",
        "language": "FINNISH",
        "languageAtHome": "FINNISH",
        "lastName": "Testaaja",
        "phone": "050123467",
        "photoUsageApproved": "false",
        "schoolClass": "Luokka",
        "schoolName": "Koulu",
        "terms": false,
      }
    }
    onSubmit={[Function]}
    validationSchema={
      ObjectSchema {
        "_blacklist": RefSet {
          "list": Set {},
          "refs": Map {},
        },
        "_conditions": Array [],
        "_defaultDefault": [Function],
        "_deps": Array [],
        "_excludedEdges": Array [],
        "_exclusive": Object {},
        "_mutate": undefined,
        "_nodes": Array [
          "additionalContactPersons",
          "phone",
          "approverEmail",
          "approverLastName",
          "approverFirstName",
          "terms",
        ],
        "_options": Object {
          "abortEarly": true,
          "recursive": true,
        },
        "_type": "object",
        "_typeError": [Function],
        "_whitelist": RefSet {
          "list": Set {},
          "refs": Map {},
        },
        "fields": Object {
          "additionalContactPersons": ArraySchema {
            "_blacklist": RefSet {
              "list": Set {},
              "refs": Map {},
            },
            "_conditions": Array [],
            "_deps": Array [],
            "_exclusive": Object {},
            "_mutate": undefined,
            "_options": Object {
              "abortEarly": true,
              "recursive": true,
            },
            "_subType": ObjectSchema {
              "_blacklist": RefSet {
                "list": Set {},
                "refs": Map {},
              },
              "_conditions": Array [],
              "_defaultDefault": [Function],
              "_deps": Array [],
              "_excludedEdges": Array [],
              "_exclusive": Object {},
              "_mutate": undefined,
              "_nodes": Array [
                "email",
                "phone",
                "lastName",
                "firstName",
              ],
              "_options": Object {
                "abortEarly": true,
                "recursive": true,
              },
              "_type": "object",
              "_typeError": [Function],
              "_whitelist": RefSet {
                "list": Set {},
                "refs": Map {},
              },
              "fields": Object {
                "email": StringSchema {
                  "_blacklist": RefSet {
                    "list": Set {},
                    "refs": Map {},
                  },
                  "_conditions": Array [],
                  "_deps": Array [],
                  "_exclusive": Object {
                    "required": true,
                  },
                  "_mutate": undefined,
                  "_options": Object {
                    "abortEarly": true,
                    "recursive": true,
                  },
                  "_type": "string",
                  "_typeError": [Function],
                  "_whitelist": RefSet {
                    "list": Set {},
                    "refs": Map {},
                  },
                  "tests": Array [
                    [Function],
                  ],
                  "transforms": Array [
                    [Function],
                  ],
                },
                "firstName": StringSchema {
                  "_blacklist": RefSet {
                    "list": Set {},
                    "refs": Map {},
                  },
                  "_conditions": Array [],
                  "_deps": Array [],
                  "_exclusive": Object {
                    "required": true,
                  },
                  "_mutate": undefined,
                  "_options": Object {
                    "abortEarly": true,
                    "recursive": true,
                  },
                  "_type": "string",
                  "_typeError": [Function],
                  "_whitelist": RefSet {
                    "list": Set {},
                    "refs": Map {},
                  },
                  "tests": Array [
                    [Function],
                  ],
                  "transforms": Array [
                    [Function],
                  ],
                },
                "lastName": StringSchema {
                  "_blacklist": RefSet {
                    "list": Set {},
                    "refs": Map {},
                  },
                  "_conditions": Array [],
                  "_deps": Array [],
                  "_exclusive": Object {
                    "required": true,
                  },
                  "_mutate": undefined,
                  "_options": Object {
                    "abortEarly": true,
                    "recursive": true,
                  },
                  "_type": "string",
                  "_typeError": [Function],
                  "_whitelist": RefSet {
                    "list": Set {},
                    "refs": Map {},
                  },
                  "tests": Array [
                    [Function],
                  ],
                  "transforms": Array [
                    [Function],
                  ],
                },
                "phone": StringSchema {
                  "_blacklist": RefSet {
                    "list": Set {},
                    "refs": Map {},
                  },
                  "_conditions": Array [],
                  "_deps": Array [],
                  "_exclusive": Object {
                    "required": true,
                  },
                  "_mutate": undefined,
                  "_options": Object {
                    "abortEarly": true,
                    "recursive": true,
                  },
                  "_type": "string",
                  "_typeError": [Function],
                  "_whitelist": RefSet {
                    "list": Set {},
                    "refs": Map {},
                  },
                  "tests": Array [
                    [Function],
                  ],
                  "transforms": Array [
                    [Function],
                  ],
                },
              },
              "tests": Array [],
              "transforms": Array [
                [Function],
              ],
            },
            "_type": "array",
            "_typeError": [Function],
            "_whitelist": RefSet {
              "list": Set {},
              "refs": Map {},
            },
            "tests": Array [],
            "transforms": Array [
              [Function],
            ],
          },
          "approverEmail": StringSchema {
            "_blacklist": RefSet {
              "list": Set {},
              "refs": Map {},
            },
            "_conditions": Array [],
            "_deps": Array [],
            "_exclusive": Object {
              "required": true,
              "undefined": false,
            },
            "_mutate": undefined,
            "_options": Object {
              "abortEarly": true,
              "recursive": true,
            },
            "_type": "string",
            "_typeError": [Function],
            "_whitelist": RefSet {
              "list": Set {},
              "refs": Map {},
            },
            "tests": Array [
              [Function],
              [Function],
            ],
            "transforms": Array [
              [Function],
            ],
          },
          "approverFirstName": StringSchema {
            "_blacklist": RefSet {
              "list": Set {},
              "refs": Map {},
            },
            "_conditions": Array [],
            "_deps": Array [],
            "_exclusive": Object {
              "max": true,
              "min": true,
              "required": true,
            },
            "_mutate": undefined,
            "_options": Object {
              "abortEarly": true,
              "recursive": true,
            },
            "_type": "string",
            "_typeError": [Function],
            "_whitelist": RefSet {
              "list": Set {},
              "refs": Map {},
            },
            "tests": Array [
              [Function],
              [Function],
              [Function],
            ],
            "transforms": Array [
              [Function],
            ],
          },
          "approverLastName": StringSchema {
            "_blacklist": RefSet {
              "list": Set {},
              "refs": Map {},
            },
            "_conditions": Array [],
            "_deps": Array [],
            "_exclusive": Object {
              "max": true,
              "min": true,
              "required": true,
            },
            "_mutate": undefined,
            "_options": Object {
              "abortEarly": true,
              "recursive": true,
            },
            "_type": "string",
            "_typeError": [Function],
            "_whitelist": RefSet {
              "list": Set {},
              "refs": Map {},
            },
            "tests": Array [
              [Function],
              [Function],
              [Function],
            ],
            "transforms": Array [
              [Function],
            ],
          },
          "phone": StringSchema {
            "_blacklist": RefSet {
              "list": Set {},
              "refs": Map {},
            },
            "_conditions": Array [],
            "_deps": Array [],
            "_exclusive": Object {
              "min": true,
              "required": true,
            },
            "_mutate": undefined,
            "_options": Object {
              "abortEarly": true,
              "recursive": true,
            },
            "_type": "string",
            "_typeError": [Function],
            "_whitelist": RefSet {
              "list": Set {},
              "refs": Map {},
            },
            "tests": Array [
              [Function],
              [Function],
            ],
            "transforms": Array [
              [Function],
            ],
          },
          "terms": BooleanSchema {
            "_blacklist": RefSet {
              "list": Set {},
              "refs": Map {},
            },
            "_conditions": Array [],
            "_deps": Array [],
            "_exclusive": Object {},
            "_mutate": undefined,
            "_options": Object {
              "abortEarly": true,
              "recursive": true,
            },
            "_type": "boolean",
            "_typeError": [Function],
            "_whitelist": RefSet {
              "list": Set {
                true,
              },
              "refs": Map {},
            },
            "_whitelistError": [Function],
            "tests": Array [],
            "transforms": Array [
              [Function],
            ],
          },
        },
        "tests": Array [],
        "transforms": Array [
          [Function],
          [Function],
        ],
      }
    }
  >
    <Stack
      space="xl"
    >
      <div
        className="stack xl"
      >
        <div>
          <Text
            variant="h1"
          >
            <h1
              className="text h1 "
            >
              Hyväksy jäsenyys
            </h1>
          </Text>
          <Text
            variant="info"
          >
            <p
              className="text info "
            >
              Teemu
               
              on lähettänyt hyväksyttäväksesi Helsingin kaupungin nuorisopalvelujen jäsenyyshakemuksen. Jäsenyys on maksuton. Hyväksymällä hakemuksen,
               
              Teemu
               
              voi viettää aikaa nuorisotaloilla, osallistua harrastusryhmiin, kursseille ja leireille Nuorisotaloilla toimintaa ohjaavat koulutetut nuoriso-ohjaajat. Mikäli tiedoissa on virheitä, pyydä nuorta muuttamaan tiedot ja lähettämään sinulle uusi varmistusviesti.
            </p>
          </Text>
        </div>
        <div>
          <Text
            variant="h2"
          >
            <h2
              className="text h2 "
            >
              Perustiedot
            </h2>
          </Text>
          <BasicInformationGrid
            addresses={
              Array [
                "Testikuja 55, 00100 Helsinki",
                "Kymintie 43, 00100 Helsinki",
              ]
            }
            birthDate="01.01.2007"
            email="teemu.testaaja@test.fi"
            language="FINNISH"
            name="Teemu Testaaja"
            phone="050123467"
          >
            <InfoGrid>
              <div
                className="grid"
              >
                <LabeledValue
                  label="Nimi"
                  noMargin={true}
                  value="Teemu Testaaja"
                >
                  <div
                    className="wrapper noMargin"
                  >
                    <strong
                      className="label"
                    >
                      Nimi
                    </strong>
                    <span
                      className="value"
                    >
                      Teemu Testaaja
                    </span>
                  </div>
                </LabeledValue>
                <LabeledValue
                  label="Syntymäpäivä"
                  noMargin={true}
                  value="01.01.2007"
                >
                  <div
                    className="wrapper noMargin"
                  >
                    <strong
                      className="label"
                    >
                      Syntymäpäivä
                    </strong>
                    <span
                      className="value"
                    >
                      01.01.2007
                    </span>
                  </div>
                </LabeledValue>
                <LabeledValue
                  label="Sähköposti"
                  noMargin={true}
                  value="teemu.testaaja@test.fi"
                >
                  <div
                    className="wrapper noMargin"
                  >
                    <strong
                      className="label"
                    >
                      Sähköposti
                    </strong>
                    <span
                      className="value"
                    >
                      teemu.testaaja@test.fi
                    </span>
                  </div>
                </LabeledValue>
                <LabeledValue
                  label="Puhelinnumero"
                  noMargin={true}
                  value="050123467"
                >
                  <div
                    className="wrapper noMargin"
                  >
                    <strong
                      className="label"
                    >
                      Puhelinnumero
                    </strong>
                    <span
                      className="value"
                    >
                      050123467
                    </span>
                  </div>
                </LabeledValue>
                <LabeledValue
                  label="Profiilin kieli"
                  noMargin={true}
                  value="Suomi"
                >
                  <div
                    className="wrapper noMargin"
                  >
                    <strong
                      className="label"
                    >
                      Profiilin kieli
                    </strong>
                    <span
                      className="value"
                    >
                      Suomi
                    </span>
                  </div>
                </LabeledValue>
                <InfoGridRow>
                  <div
                    className="gridRow"
                  >
                    <LabeledValue
                      key="Testikuja 55, 00100 Helsinki"
                      label="Osoite"
                      noMargin={true}
                      value="Testikuja 55, 00100 Helsinki"
                    >
                      <div
                        className="wrapper noMargin"
                      >
                        <strong
                          className="label"
                        >
                          Osoite
                        </strong>
                        <span
                          className="value"
                        >
                          Testikuja 55, 00100 Helsinki
                        </span>
                      </div>
                    </LabeledValue>
                    <LabeledValue
                      key="Kymintie 43, 00100 Helsinki"
                      label="Osoite 2"
                      noMargin={true}
                      value="Kymintie 43, 00100 Helsinki"
                    >
                      <div
                        className="wrapper noMargin"
                      >
                        <strong
                          className="label"
                        >
                          Osoite 2
                        </strong>
                        <span
                          className="value"
                        >
                          Kymintie 43, 00100 Helsinki
                        </span>
                      </div>
                    </LabeledValue>
                  </div>
                </InfoGridRow>
              </div>
            </InfoGrid>
          </BasicInformationGrid>
        </div>
        <div>
          <Text
            variant="h2"
          >
            <h2
              className="text h2 "
            >
              Lisätiedot
            </h2>
          </Text>
          <InfoGrid>
            <div
              className="grid"
            >
              <LabeledValue
                label="Koulu ja luokka"
                noMargin={true}
                value="Koulu, Luokka"
              >
                <div
                  className="wrapper noMargin"
                >
                  <strong
                    className="label"
                  >
                    Koulu ja luokka
                  </strong>
                  <span
                    className="value"
                  >
                    Koulu, Luokka
                  </span>
                </div>
              </LabeledValue>
              <LabeledValue
                label="Kotona puhutut kielet"
                noMargin={true}
                value="Suomi"
              >
                <div
                  className="wrapper noMargin"
                >
                  <strong
                    className="label"
                  >
                    Kotona puhutut kielet
                  </strong>
                  <span
                    className="value"
                  >
                    Suomi
                  </span>
                </div>
              </LabeledValue>
            </div>
          </InfoGrid>
        </div>
        <Form>
          <form
            action="#"
            onReset={[Function]}
            onSubmit={[Function]}
          >
            <Stack
              space="xl"
            >
              <div
                className="stack xl"
              >
                <div>
                  <Text
                    variant="h2"
                  >
                    <h2
                      className="text h2 "
                    >
                      Huoltajalta vaadittavat luvat
                    </h2>
                  </Text>
                  <Text
                    variant="h3"
                  >
                    <h3
                      className="text h3 "
                    >
                      Kuvauslupa
                    </h3>
                  </Text>
                  <Text
                    variant="info"
                  >
                    <p
                      className="text info "
                    >
                      Lapsesta voi ottaa kuvia ja niitä saa käyttää Helsingin kaupungin viestinnässä ja markkinoinnissa painetussa ja sähköisessä mediassa. Kuvaamisesta ja kuvien käytöstä ei makseta korvausta. Oikeus kuvien käyttöön on aina voimassa ja koskee koko Helsingin kaupungin viestintää ja markkinointiviestintää.
                    </p>
                  </Text>
                  <div
                    className="formFields"
                  >
                    <ul
                      className="list"
                    >
                      <li
                        className="radioButtonRow"
                      >
                        <Field
                          as={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "displayName": "RadioButton",
                              "render": [Function],
                            }
                          }
                          checked={false}
                          id="photoUsageApprovedYes"
                          labelText="Kyllä"
                          name="photoUsageApproved"
                          value="true"
                        >
                          <RadioButton
                            checked={false}
                            id="photoUsageApprovedYes"
                            labelText="Kyllä"
                            name="photoUsageApproved"
                            onBlur={[Function]}
                            onChange={[Function]}
                            value="true"
                          >
                            <div
                              className="RadioButton-module_radioButton__1xM1I radio-button_hds-radio-button__1kktv"
                            >
                              <input
                                checked={false}
                                className="RadioButton-module_input__1cTWc radio-button_hds-radio-button__input__27sH6"
                                disabled={false}
                                id="photoUsageApprovedYes"
                                name="photoUsageApproved"
                                onBlur={[Function]}
                                onChange={[Function]}
                                type="radio"
                                value="true"
                              />
                              <label
                                className="RadioButton-module_label__3Zij9 radio-button_hds-radio-button__label__1XnIa"
                                htmlFor="photoUsageApprovedYes"
                              >
                                Kyllä
                              </label>
                            </div>
                          </RadioButton>
                        </Field>
                      </li>
                      <li
                        className="radioButtonRow"
                      >
                        <Field
                          as={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "displayName": "RadioButton",
                              "render": [Function],
                            }
                          }
                          checked={true}
                          id="photoUsageApprovedNo"
                          labelText="Ei"
                          name="photoUsageApproved"
                          value="false"
                        >
                          <RadioButton
                            checked={true}
                            id="photoUsageApprovedNo"
                            labelText="Ei"
                            name="photoUsageApproved"
                            onBlur={[Function]}
                            onChange={[Function]}
                            value="false"
                          >
                            <div
                              className="RadioButton-module_radioButton__1xM1I radio-button_hds-radio-button__1kktv"
                            >
                              <input
                                checked={true}
                                className="RadioButton-module_input__1cTWc radio-button_hds-radio-button__input__27sH6"
                                disabled={false}
                                id="photoUsageApprovedNo"
                                name="photoUsageApproved"
                                onBlur={[Function]}
                                onChange={[Function]}
                                type="radio"
                                value="false"
                              />
                              <label
                                className="RadioButton-module_label__3Zij9 radio-button_hds-radio-button__label__1XnIa"
                                htmlFor="photoUsageApprovedNo"
                              >
                                Ei
                              </label>
                            </div>
                          </RadioButton>
                        </Field>
                      </li>
                    </ul>
                  </div>
                </div>
                <div>
                  <Text
                    variant="h2"
                  >
                    <h2
                      className="text h2 "
                    >
                      Huoltajan tiedot
                    </h2>
                  </Text>
                  <Text
                    variant="info"
                  >
                    <p
                      className="text info "
                    >
                      Huoltajaan voidaan olla yhteydessä lasta koskevissa asioissa.
                    </p>
                  </Text>
                  <YouthProfileApproverFields
                    additionalContactPersonHelperText="Muihin ilmoitettuihin huoltajiin voidaan olla yhteydessä lasta koskevissa asioissa."
                    viewer="approver"
                  >
                    <Stack
                      space="xl"
                    >
                      <div
                        className="stack xl"
                      >
                        <YouthProfileFormGrid>
                          <div
                            className="formGrid vertical-default"
                          >
                            <FormikTestInput
                              autoComplete="given-name"
                              id="approverFirstName"
                              labelText="Etunimi *"
                              name="approverFirstName"
                            >
                              <Field
                                name="approverFirstName"
                              >
                                <ForwardRef
                                  autoComplete="given-name"
                                  id="approverFirstName"
                                  invalid={false}
                                  labelText="Etunimi *"
                                  name="approverFirstName"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  value="Ville"
                                >
                                  <ForwardRef
                                    autoComplete="given-name"
                                    className="input"
                                    id="approverFirstName"
                                    invalid={false}
                                    labelText="Etunimi *"
                                    name="approverFirstName"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    value="Ville"
                                  >
                                    <kl
                                      className="input"
                                      id="approverFirstName"
                                      invalid={false}
                                      labelText="Etunimi *"
                                    >
                                      <div
                                        className="TextInput-module_root__2CMNr text-input_hds-text-input__2LODq input"
                                      >
                                        <un
                                          hidden={false}
                                          inputId="approverFirstName"
                                          label="Etunimi *"
                                          required={false}
                                        >
                                          <label
                                            className="FieldLabel-module_label__1zrXK "
                                            htmlFor="approverFirstName"
                                          >
                                            Etunimi *
                                          </label>
                                        </un>
                                        <div
                                          className="TextInput-module_inputWrapper__3Rvel text-input_hds-text-input__input-wrapper__1OqYG"
                                        >
                                          <input
                                            aria-describedby={null}
                                            autoComplete="given-name"
                                            className="TextInput-module_input__1BlHi text-input_hds-text-input__input__GJm5C"
                                            disabled={false}
                                            id="approverFirstName"
                                            name="approverFirstName"
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            type="text"
                                            value="Ville"
                                          />
                                        </div>
                                      </div>
                                    </kl>
                                  </ForwardRef>
                                </ForwardRef>
                              </Field>
                            </FormikTestInput>
                            <FormikTestInput
                              autoComplete="family-name"
                              id="approverLastName"
                              labelText="Sukunimi *"
                              name="approverLastName"
                            >
                              <Field
                                name="approverLastName"
                              >
                                <ForwardRef
                                  autoComplete="family-name"
                                  id="approverLastName"
                                  invalid={false}
                                  labelText="Sukunimi *"
                                  name="approverLastName"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  value="Vanhempi"
                                >
                                  <ForwardRef
                                    autoComplete="family-name"
                                    className="input"
                                    id="approverLastName"
                                    invalid={false}
                                    labelText="Sukunimi *"
                                    name="approverLastName"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    value="Vanhempi"
                                  >
                                    <kl
                                      className="input"
                                      id="approverLastName"
                                      invalid={false}
                                      labelText="Sukunimi *"
                                    >
                                      <div
                                        className="TextInput-module_root__2CMNr text-input_hds-text-input__2LODq input"
                                      >
                                        <un
                                          hidden={false}
                                          inputId="approverLastName"
                                          label="Sukunimi *"
                                          required={false}
                                        >
                                          <label
                                            className="FieldLabel-module_label__1zrXK "
                                            htmlFor="approverLastName"
                                          >
                                            Sukunimi *
                                          </label>
                                        </un>
                                        <div
                                          className="TextInput-module_inputWrapper__3Rvel text-input_hds-text-input__input-wrapper__1OqYG"
                                        >
                                          <input
                                            aria-describedby={null}
                                            autoComplete="family-name"
                                            className="TextInput-module_input__1BlHi text-input_hds-text-input__input__GJm5C"
                                            disabled={false}
                                            id="approverLastName"
                                            name="approverLastName"
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            type="text"
                                            value="Vanhempi"
                                          />
                                        </div>
                                      </div>
                                    </kl>
                                  </ForwardRef>
                                </ForwardRef>
                              </Field>
                            </FormikTestInput>
                            <FormikTestInput
                              autoComplete="email"
                              id="approverEmail"
                              labelText="Sähköpostiosoite *"
                              name="approverEmail"
                              type="email"
                            >
                              <Field
                                name="approverEmail"
                              >
                                <ForwardRef
                                  autoComplete="email"
                                  id="approverEmail"
                                  invalid={false}
                                  labelText="Sähköpostiosoite *"
                                  name="approverEmail"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  type="email"
                                  value="ville.vanhempi@test.fi"
                                >
                                  <ForwardRef
                                    autoComplete="email"
                                    className="input"
                                    id="approverEmail"
                                    invalid={false}
                                    labelText="Sähköpostiosoite *"
                                    name="approverEmail"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    type="email"
                                    value="ville.vanhempi@test.fi"
                                  >
                                    <kl
                                      className="input"
                                      id="approverEmail"
                                      invalid={false}
                                      labelText="Sähköpostiosoite *"
                                    >
                                      <div
                                        className="TextInput-module_root__2CMNr text-input_hds-text-input__2LODq input"
                                      >
                                        <un
                                          hidden={false}
                                          inputId="approverEmail"
                                          label="Sähköpostiosoite *"
                                          required={false}
                                        >
                                          <label
                                            className="FieldLabel-module_label__1zrXK "
                                            htmlFor="approverEmail"
                                          >
                                            Sähköpostiosoite *
                                          </label>
                                        </un>
                                        <div
                                          className="TextInput-module_inputWrapper__3Rvel text-input_hds-text-input__input-wrapper__1OqYG"
                                        >
                                          <input
                                            aria-describedby={null}
                                            autoComplete="email"
                                            className="TextInput-module_input__1BlHi text-input_hds-text-input__input__GJm5C"
                                            disabled={false}
                                            id="approverEmail"
                                            name="approverEmail"
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            type="email"
                                            value="ville.vanhempi@test.fi"
                                          />
                                        </div>
                                      </div>
                                    </kl>
                                  </ForwardRef>
                                </ForwardRef>
                              </Field>
                            </FormikTestInput>
                            <FormikTestInput
                              autoComplete="tel"
                              id="approverPhone"
                              labelText="Puhelinnumero *"
                              name="approverPhone"
                              type="tel"
                            >
                              <Field
                                name="approverPhone"
                              >
                                <ForwardRef
                                  autoComplete="tel"
                                  id="approverPhone"
                                  invalid={false}
                                  labelText="Puhelinnumero *"
                                  name="approverPhone"
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  type="tel"
                                  value="05012345567"
                                >
                                  <ForwardRef
                                    autoComplete="tel"
                                    className="input"
                                    id="approverPhone"
                                    invalid={false}
                                    labelText="Puhelinnumero *"
                                    name="approverPhone"
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    type="tel"
                                    value="05012345567"
                                  >
                                    <kl
                                      className="input"
                                      id="approverPhone"
                                      invalid={false}
                                      labelText="Puhelinnumero *"
                                    >
                                      <div
                                        className="TextInput-module_root__2CMNr text-input_hds-text-input__2LODq input"
                                      >
                                        <un
                                          hidden={false}
                                          inputId="approverPhone"
                                          label="Puhelinnumero *"
                                          required={false}
                                        >
                                          <label
                                            className="FieldLabel-module_label__1zrXK "
                                            htmlFor="approverPhone"
                                          >
                                            Puhelinnumero *
                                          </label>
                                        </un>
                                        <div
                                          className="TextInput-module_inputWrapper__3Rvel text-input_hds-text-input__input-wrapper__1OqYG"
                                        >
                                          <input
                                            aria-describedby={null}
                                            autoComplete="tel"
                                            className="TextInput-module_input__1BlHi text-input_hds-text-input__input__GJm5C"
                                            disabled={false}
                                            id="approverPhone"
                                            name="approverPhone"
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            type="tel"
                                            value="05012345567"
                                          />
                                        </div>
                                      </div>
                                    </kl>
                                  </ForwardRef>
                                </ForwardRef>
                              </Field>
                            </FormikTestInput>
                          </div>
                        </YouthProfileFormGrid>
                        <FormGroupDescription
                          className="additionalApproverDescription"
                          description="Muihin ilmoitettuihin huoltajiin voidaan olla yhteydessä lasta koskevissa asioissa."
                          name="additionalContactPersons"
                        />
                        <ArrayFieldTemplate
                          addItemLabel="Lisää toisen huoltajan yhteystiedot"
                          name="additionalContactPersons"
                          onPushItem={[Function]}
                          renderField={[Function]}
                        >
                          <FormikConnect(FieldArrayInner)
                            name="additionalContactPersons"
                            render={[Function]}
                          >
                            <FieldArrayInner
                              formik={
                                Object {
                                  "dirty": false,
                                  "errors": Object {},
                                  "getFieldMeta": [Function],
                                  "getFieldProps": [Function],
                                  "handleBlur": [Function],
                                  "handleChange": [Function],
                                  "handleReset": [Function],
                                  "handleSubmit": [Function],
                                  "initialErrors": Object {},
                                  "initialStatus": undefined,
                                  "initialTouched": Object {},
                                  "initialValues": Object {
                                    "additionalContactPersons": Array [],
                                    "address": "Testikuja 55, 00100 Helsinki",
                                    "addresses": Array [
                                      "Kymintie 43, 00100 Helsinki",
                                    ],
                                    "approverEmail": "ville.vanhempi@test.fi",
                                    "approverFirstName": "Ville",
                                    "approverLastName": "Vanhempi",
                                    "approverPhone": "05012345567",
                                    "birthDate": "2007-01-01",
                                    "email": "teemu.testaaja@test.fi",
                                    "firstName": "Teemu",
                                    "language": "FINNISH",
                                    "languageAtHome": "FINNISH",
                                    "lastName": "Testaaja",
                                    "phone": "050123467",
                                    "photoUsageApproved": "false",
                                    "schoolClass": "Luokka",
                                    "schoolName": "Koulu",
                                    "terms": false,
                                  },
                                  "isSubmitting": false,
                                  "isValid": true,
                                  "isValidating": false,
                                  "registerField": [Function],
                                  "resetForm": [Function],
                                  "setErrors": [Function],
                                  "setFieldError": [Function],
                                  "setFieldTouched": [Function],
                                  "setFieldValue": [Function],
                                  "setFormikState": [Function],
                                  "setStatus": [Function],
                                  "setSubmitting": [Function],
                                  "setTouched": [Function],
                                  "setValues": [Function],
                                  "status": undefined,
                                  "submitCount": 0,
                                  "submitForm": [Function],
                                  "touched": Object {},
                                  "unregisterField": [Function],
                                  "validateField": [Function],
                                  "validateForm": [Function],
                                  "validateOnBlur": true,
                                  "validateOnChange": true,
                                  "validateOnMount": false,
                                  "values": Object {
                                    "additionalContactPersons": Array [],
                                    "address": "Testikuja 55, 00100 Helsinki",
                                    "addresses": Array [
                                      "Kymintie 43, 00100 Helsinki",
                                    ],
                                    "approverEmail": "ville.vanhempi@test.fi",
                                    "approverFirstName": "Ville",
                                    "approverLastName": "Vanhempi",
                                    "approverPhone": "05012345567",
                                    "birthDate": "2007-01-01",
                                    "email": "teemu.testaaja@test.fi",
                                    "firstName": "Teemu",
                                    "language": "FINNISH",
                                    "languageAtHome": "FINNISH",
                                    "lastName": "Testaaja",
                                    "phone": "050123467",
                                    "photoUsageApproved": "false",
                                    "schoolClass": "Luokka",
                                    "schoolName": "Koulu",
                                    "terms": false,
                                  },
                                }
                              }
                              name="additionalContactPersons"
                              render={[Function]}
                              validateOnChange={true}
                            >
                              <Stack
                                space="m"
                              >
                                <div
                                  className="stack m"
                                >
                                  <ForwardRef
                                    className="addItemButton"
                                    iconLeft={<Unknown />}
                                    onClick={[Function]}
                                    type="button"
                                    variant="supplementary"
                                  >
                                    <button
                                      className="Button-module_button__1msFE button_hds-button__2A0je Button-module_supplementary__3YKiS button_hds-button--supplementary__GcHcV addItemButton"
                                      disabled={false}
                                      onClick={[Function]}
                                      type="button"
                                    >
                                      <div
                                        aria-hidden="true"
                                        className="Button-module_icon__O-h7R button_hds-icon__17j8Z"
                                      >
                                        <Component>
                                          <svg
                                            className="Icon-module_icon__1Jtzj icon_hds-icon__1YqNC Icon-module_s__2WGWe icon_hds-icon--size-s__2Lkik"
                                            role="img"
                                            style={Object {}}
                                            viewBox="0 0 24 24"
                                            xmlns="http://www.w3.org/2000/svg"
                                          >
                                            <g
                                              fill="none"
                                              fillRule="evenodd"
                                            >
                                              <path
                                                d="M0 0h24v24H0z"
                                              />
                                              <path
                                                d="M12 2c5.523 0 10 4.477 10 10s-4.477 10-10 10S2 17.523 2 12 6.477 2 12 2zm0 2a8 8 0 100 16 8 8 0 000-16zm1 3v4h4v2h-4v4h-2v-4H7v-2h4V7h2z"
                                                fill="currentColor"
                                              />
                                            </g>
                                          </svg>
                                        </Component>
                                      </div>
                                      <span
                                        className="Button-module_label__a4np1 button_hds-button__label__2EQa-"
                                      >
                                        Lisää toisen huoltajan yhteystiedot
                                      </span>
                                    </button>
                                  </ForwardRef>
                                </div>
                              </Stack>
                            </FieldArrayInner>
                          </FormikConnect(FieldArrayInner)>
                        </ArrayFieldTemplate>
                      </div>
                    </Stack>
                  </YouthProfileApproverFields>
                </div>
                <TermsField
                  id="terms"
                  name="terms"
                >
                  <div>
                    <ForwardRef
                      checked={false}
                      id="terms"
                      label={
                        <span
                          className="listLabel"
                        >
                          <Trans
                            components={
                              Array [
                                <ExternalLink
                                  href="https://www.hel.fi/static/liitteet/kanslia/rekisteriselosteet/Kuva/Kuva-EU-Nuorisopalvelujen-jasenrekisteri.pdf"
                                />,
                                <ExternalLink
                                  href="https://www.hel.fi/static/liitteet/kanslia/rekisteriselosteet/Keha/Kanslia-EU-Sahkoisten-asiointipalveluiden-rekisteri.pdf"
                                />,
                                <ExternalLink
                                  href="https://www.hel.fi/helsinki/fi/kaupunki-ja-hallinto/tietoa-helsingista/tietosuoja/"
                                />,
                              ]
                            }
                            i18nKey="approval.approveTerms"
                          />
                        </span>
                      }
                      name="terms"
                      onBlur={[Function]}
                      onChange={[Function]}
                      type="checkbox"
                      value={false}
                    >
                      <div
                        className="Checkbox-module_checkbox__3L0GR checkbox_hds-checkbox__9HMCz"
                      >
                        <input
                          aria-describedby={null}
                          checked={false}
                          className="Checkbox-module_input__3VZvy checkbox_hds-checkbox__input__1w0pu"
                          disabled={false}
                          id="terms"
                          name="terms"
                          onBlur={[Function]}
                          onChange={[Function]}
                          type="checkbox"
                          value={false}
                        />
                        <label
                          className="Checkbox-module_label__L5AN1 checkbox_hds-checkbox__label__3HoD3"
                          htmlFor="terms"
                        >
                          <span
                            className="listLabel"
                          >
                            <Trans
                              components={
                                Array [
                                  <ExternalLink
                                    href="https://www.hel.fi/static/liitteet/kanslia/rekisteriselosteet/Kuva/Kuva-EU-Nuorisopalvelujen-jasenrekisteri.pdf"
                                  />,
                                  <ExternalLink
                                    href="https://www.hel.fi/static/liitteet/kanslia/rekisteriselosteet/Keha/Kanslia-EU-Sahkoisten-asiointipalveluiden-rekisteri.pdf"
                                  />,
                                  <ExternalLink
                                    href="https://www.hel.fi/helsinki/fi/kaupunki-ja-hallinto/tietoa-helsingista/tietosuoja/"
                                  />,
                                ]
                              }
                              i18nKey="approval.approveTerms"
                            >
                              Olen tutustunut 
                              <ExternalLink
                                href="https://www.hel.fi/static/liitteet/kanslia/rekisteriselosteet/Kuva/Kuva-EU-Nuorisopalvelujen-jasenrekisteri.pdf"
                                key="1"
                              >
                                <a
                                  className="externalLink "
                                  href="https://www.hel.fi/static/liitteet/kanslia/rekisteriselosteet/Kuva/Kuva-EU-Nuorisopalvelujen-jasenrekisteri.pdf"
                                  rel="noopener noreferrer"
                                  target="_blank"
                                >
                                  tämän palvelun rekisteriselosteeseen
                                   
                                  <Component
                                    aria-label="Aukeaa uuteen ikkunaan"
                                  >
                                    <svg
                                      aria-label="Aukeaa uuteen ikkunaan"
                                      className="Icon-module_icon__1Jtzj icon_hds-icon__1YqNC Icon-module_s__2WGWe icon_hds-icon--size-s__2Lkik"
                                      role="img"
                                      style={Object {}}
                                      viewBox="0 0 24 24"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <g
                                        fill="none"
                                        fillRule="evenodd"
                                      >
                                        <path
                                          d="M0 0h24v24H0z"
                                        />
                                        <path
                                          d="M10 3v2H5v14h14v-5h2v7H3V3h7zm11 0v8h-2V6.413l-7 7.001L10.586 12l6.999-7H13V3h8z"
                                          fill="currentColor"
                                        />
                                      </g>
                                    </svg>
                                  </Component>
                                </a>
                              </ExternalLink>
                              , 
                              <ExternalLink
                                href="https://www.hel.fi/static/liitteet/kanslia/rekisteriselosteet/Keha/Kanslia-EU-Sahkoisten-asiointipalveluiden-rekisteri.pdf"
                                key="3"
                              >
                                <a
                                  className="externalLink "
                                  href="https://www.hel.fi/static/liitteet/kanslia/rekisteriselosteet/Keha/Kanslia-EU-Sahkoisten-asiointipalveluiden-rekisteri.pdf"
                                  rel="noopener noreferrer"
                                  target="_blank"
                                >
                                  Helsinki-profiilin rekisteriselosteeseen
                                   
                                  <Component
                                    aria-label="Aukeaa uuteen ikkunaan"
                                  >
                                    <svg
                                      aria-label="Aukeaa uuteen ikkunaan"
                                      className="Icon-module_icon__1Jtzj icon_hds-icon__1YqNC Icon-module_s__2WGWe icon_hds-icon--size-s__2Lkik"
                                      role="img"
                                      style={Object {}}
                                      viewBox="0 0 24 24"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <g
                                        fill="none"
                                        fillRule="evenodd"
                                      >
                                        <path
                                          d="M0 0h24v24H0z"
                                        />
                                        <path
                                          d="M10 3v2H5v14h14v-5h2v7H3V3h7zm11 0v8h-2V6.413l-7 7.001L10.586 12l6.999-7H13V3h8z"
                                          fill="currentColor"
                                        />
                                      </g>
                                    </svg>
                                  </Component>
                                </a>
                              </ExternalLink>
                               ja 
                              <ExternalLink
                                href="https://www.hel.fi/helsinki/fi/kaupunki-ja-hallinto/tietoa-helsingista/tietosuoja/"
                                key="5"
                              >
                                <a
                                  className="externalLink "
                                  href="https://www.hel.fi/helsinki/fi/kaupunki-ja-hallinto/tietoa-helsingista/tietosuoja/"
                                  rel="noopener noreferrer"
                                  target="_blank"
                                >
                                  kaupungin tietosuojakäytäntöön
                                   
                                  <Component
                                    aria-label="Aukeaa uuteen ikkunaan"
                                  >
                                    <svg
                                      aria-label="Aukeaa uuteen ikkunaan"
                                      className="Icon-module_icon__1Jtzj icon_hds-icon__1YqNC Icon-module_s__2WGWe icon_hds-icon--size-s__2Lkik"
                                      role="img"
                                      style={Object {}}
                                      viewBox="0 0 24 24"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <g
                                        fill="none"
                                        fillRule="evenodd"
                                      >
                                        <path
                                          d="M0 0h24v24H0z"
                                        />
                                        <path
                                          d="M10 3v2H5v14h14v-5h2v7H3V3h7zm11 0v8h-2V6.413l-7 7.001L10.586 12l6.999-7H13V3h8z"
                                          fill="currentColor"
                                        />
                                      </g>
                                    </svg>
                                  </Component>
                                </a>
                              </ExternalLink>
                              . Minuun voidaan olla yhteydessä antamieni tietojen avulla.
                            </Trans>
                          </span>
                        </label>
                      </div>
                    </ForwardRef>
                  </div>
                </TermsField>
                <ForwardRef
                  className="button"
                  type="submit"
                >
                  <button
                    className="Button-module_button__1msFE button_hds-button__2A0je Button-module_primary__2LfKB button_hds-button--primary__2NVvO button"
                    disabled={false}
                    type="submit"
                  >
                    <span
                      className="Button-module_label__a4np1 button_hds-button__label__2EQa-"
                    >
                      Hyväksy jäsenyys
                    </span>
                  </button>
                </ForwardRef>
              </div>
            </Stack>
          </form>
        </Form>
      </div>
    </Stack>
  </Formik>
</ApproveYouthProfileForm>
`;
