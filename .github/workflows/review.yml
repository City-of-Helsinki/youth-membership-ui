name: Build & Review
on: [pull_request]

env:
  CONTAINER_REGISTRY: ghcr.io
  CONTAINER_REGISTRY_USER: ${{ secrets.GHCR_CONTAINER_REGISTRY_USER }}
  CONTAINER_REGISTRY_PASSWORD: ${{ secrets.GHCR_TOKEN }}
  CONTAINER_REGISTRY_REPO: ghcr.io/city-of-helsinki/${{ github.event.repository.name }}
  REPO_NAME: ${{ github.event.repository.name }}
  KUBECONFIG_RAW: ${{ secrets.KUBECONFIG_RAW }}
  BUILD_ARTIFACT_FOLDER: 'build_artifacts'
  SERVICE_ARTIFACT_FOLDER: 'service_artifacts'
  BASE_DOMAIN: ${{ secrets.BASE_DOMAIN_STAGING }}
  SERVICE_PORT: 80

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build
    steps:
      - uses: actions/checkout@v2
      - uses: andersinno/kolga-setup-action@v2
      - name: Build
        uses: andersinno/kolga-build-action@v2
        env:
          DOCKER_IMAGE_NAME: ${{ env.REPO_NAME }}-review
          DOCKER_BUILD_ARG_REACT_APP_ENVIRONMENT: 'review'
          DOCKER_BUILD_ARG_REACT_APP_PROFILE_LINK: "https://profiili.${{ env.BASE_DOMAIN }}/loginsso"
          DOCKER_BUILD_ARG_REACT_APP_OIDC_AUTHORITY: "https://tunnistamo.${{ env.BASE_DOMAIN }}/"
          DOCKER_BUILD_ARG_REACT_APP_OIDC_CLIENT_ID: ${{ env.K8S_NAMESPACE }}
          DOCKER_BUILD_ARG_REACT_APP_OIDC_SCOPE: "openid https://api.hel.fi/auth/jassariapi https://api.hel.fi/auth/helsinkiprofile"
          DOCKER_BUILD_ARG_REACT_APP_PROFILE_GRAPHQL: "https://jassari-federation.${{ env.BASE_DOMAIN }}/"
          DOCKER_BUILD_ARG_REACT_APP_BASE_URL: "https://$TF_PROJECT_NAME_SLUG-$CI_ENVIRONMENT_SLUG.$KUBE_INGRESS_BASE_DOMAIN"
          DOCKER_BUILD_ARG_REACT_APP_ADMIN_URL: "https://jassari-admin.${{ env.BASE_DOMAIN }}/"

  review:
    runs-on: ubuntu-latest
    needs: build
    name: Review and Accept
    steps:
      - uses: actions/checkout@v2
      - uses: andersinno/kolga-setup-action@v2

      - name: Deploy
        uses: andersinno/kolga-deploy-action@v2
        env:
          ENVIRONMENT_URL: https://${{ env.K8S_NAMESPACE }}.${{ env.BASE_DOMAIN }}
          DOCKER_IMAGE_NAME: ${{ env.REPO_NAME }}-review

      - name: Setup Tunnistamo
        uses: City-of-Helsinki/setup-tunnistamo-action@main
        with:
          kubeconfig_raw: ${{ env.KUBECONFIG_RAW}}
          review_namespace: ${{ env.K8S_NAMESPACE }}
          api_scope: https://api.hel.fi/auth/jassariapi

      - name: Setup Tunnistamo
        uses: City-of-Helsinki/setup-tunnistamo-action@main
        with:
          kubeconfig_raw: ${{ env.KUBECONFIG_RAW}}
          review_namespace: ${{ env.K8S_NAMESPACE }}
          api_scope: https://api.hel.fi/auth/helsinkiprofile

      - name: Setup kubectl
        run: |
          echo "${{ env.KUBECONFIG_RAW }}" > $(pwd)/kubeconfig
          echo "KUBECONFIG=$(pwd)/kubeconfig" >> $GITHUB_ENV
        shell: bash
      - name: Get Review Deploy URL
        id: deploy-url
        run: |
          DEPLOY_URL=$(kubectl get ingress -n "${{ env.K8S_NAMESPACE }}" -o jsonpath='{.items[0].spec.rules[0].host}')
          echo "BROWSER_TESTING_URL=https://$DEPLOY_URL" >> $GITHUB_ENV
        shell: bash

      - name: Setup Node
        uses: actions/setup-node@v2.1.2
        with:
          node-version: 12.x
      - name: Create yarn cache directory path
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies
        run: yarn --prefer-offline --frozen-lockfile --check-files

      - name: Run Acceptance Tests
        run: yarn browser-test:ci
        env:
          BROWSER_TESTING_MAILOSAUR_API: ${{ secrets.BROWSER_TESTING_MAILOSAUR_API }}
          BROWSER_TESTING_MAILOSAUR_SERVER_ID: ${{ secrets.BROWSER_TESTING_MAILOSAUR_SERVER_ID }}
          BROWSER_TESTING_USERNAME: ${{ secrets.BROWSER_TESTING_USERNAME }}
          BROWSER_TESTING_USERNAME_WITH_PROFILE: ${{ secrets.BROWSER_TESTING_USERNAME_WITH_PROFILE }}
          BROWSER_TESTING_USERNAME_NO_ACCESS: ${{ secrets.BROWSER_TESTING_USERNAME_NO_ACCESS }}
          BROWSER_TESTING_PASSWORD: ${{ secrets.BROWSER_TESTING_PASSWORD }}
      - name: Upload screenshots of failed tests
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: screenshots
          path: screenshots/
