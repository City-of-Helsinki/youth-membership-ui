// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`matches snapshot 1`] = `
<ApproveYouthProfileForm
  isSubmitting={false}
  onValues={[MockFunction]}
  profile={
    Object {
      "address": "Testikuja 55, 00100 Helsinki",
      "approverEmail": "ville.vanhempi@test.fi",
      "approverFirstName": "Ville",
      "approverLastName": "Vanhempi",
      "approverPhone": "05012345567",
      "birthDate": "2006-01-01",
      "email": "teemu.testaaja@test.fi",
      "firstName": "Teemu",
      "languageAtHome": "FINNISH",
      "lastName": "Testaaja",
      "phone": "050123467",
      "photoUsageApproved": "false",
      "schoolClass": "Luokka",
      "schoolName": "Koulu",
    }
  }
>
  <Formik
    enableReinitialize={true}
    initialValues={
      Object {
        "address": "Testikuja 55, 00100 Helsinki",
        "approverEmail": "ville.vanhempi@test.fi",
        "approverFirstName": "Ville",
        "approverLastName": "Vanhempi",
        "approverPhone": "05012345567",
        "birthDate": "2006-01-01",
        "email": "teemu.testaaja@test.fi",
        "firstName": "Teemu",
        "languageAtHome": "FINNISH",
        "lastName": "Testaaja",
        "phone": "050123467",
        "photoUsageApproved": "false",
        "schoolClass": "Luokka",
        "schoolName": "Koulu",
        "terms": false,
      }
    }
    onSubmit={[Function]}
    validationSchema={
      ObjectSchema {
        "_blacklist": RefSet {
          "list": Set {},
          "refs": Map {},
        },
        "_conditions": Array [],
        "_defaultDefault": [Function],
        "_deps": Array [],
        "_excludedEdges": Array [],
        "_exclusive": Object {},
        "_mutate": undefined,
        "_nodes": Array [
          "phone",
          "approverEmail",
          "approverLastName",
          "approverFirstName",
        ],
        "_options": Object {
          "abortEarly": true,
          "recursive": true,
        },
        "_type": "object",
        "_typeError": [Function],
        "_whitelist": RefSet {
          "list": Set {},
          "refs": Map {},
        },
        "fields": Object {
          "approverEmail": StringSchema {
            "_blacklist": RefSet {
              "list": Set {},
              "refs": Map {},
            },
            "_conditions": Array [],
            "_deps": Array [],
            "_exclusive": Object {
              "max": true,
            },
            "_mutate": undefined,
            "_options": Object {
              "abortEarly": true,
              "recursive": true,
            },
            "_type": "string",
            "_typeError": [Function],
            "_whitelist": RefSet {
              "list": Set {},
              "refs": Map {},
            },
            "tests": Array [
              [Function],
            ],
            "transforms": Array [
              [Function],
            ],
          },
          "approverFirstName": StringSchema {
            "_blacklist": RefSet {
              "list": Set {},
              "refs": Map {},
            },
            "_conditions": Array [],
            "_deps": Array [],
            "_exclusive": Object {
              "max": true,
            },
            "_mutate": undefined,
            "_options": Object {
              "abortEarly": true,
              "recursive": true,
            },
            "_type": "string",
            "_typeError": [Function],
            "_whitelist": RefSet {
              "list": Set {},
              "refs": Map {},
            },
            "tests": Array [
              [Function],
            ],
            "transforms": Array [
              [Function],
            ],
          },
          "approverLastName": StringSchema {
            "_blacklist": RefSet {
              "list": Set {},
              "refs": Map {},
            },
            "_conditions": Array [],
            "_deps": Array [],
            "_exclusive": Object {
              "max": true,
            },
            "_mutate": undefined,
            "_options": Object {
              "abortEarly": true,
              "recursive": true,
            },
            "_type": "string",
            "_typeError": [Function],
            "_whitelist": RefSet {
              "list": Set {},
              "refs": Map {},
            },
            "tests": Array [
              [Function],
            ],
            "transforms": Array [
              [Function],
            ],
          },
          "phone": StringSchema {
            "_blacklist": RefSet {
              "list": Set {},
              "refs": Map {},
            },
            "_conditions": Array [],
            "_deps": Array [],
            "_exclusive": Object {
              "max": true,
              "min": true,
            },
            "_mutate": undefined,
            "_options": Object {
              "abortEarly": true,
              "recursive": true,
            },
            "_type": "string",
            "_typeError": [Function],
            "_whitelist": RefSet {
              "list": Set {},
              "refs": Map {},
            },
            "tests": Array [
              [Function],
              [Function],
            ],
            "transforms": Array [
              [Function],
            ],
          },
        },
        "tests": Array [],
        "transforms": Array [
          [Function],
        ],
      }
    }
  >
    <div
      className="content"
    >
      <span
        className="formTitleText"
      >
        <h2>
          Hyväksy jäsenyys
        </h2>
        <p>
          Teemu
           
          on lähettänyt hyväksyttäväksesi Helsingin kaupungin nuorisopalvelujen jäsenyyshakemuksen. Jäsenyys on maksuton. Hyväksymällä hakemuksen,
           
          Teemu
           
          voi käydä nuorisotalolla ja saa kivoja etuja. Mikäli tiedoissa on virheitä, pyydä nuorta muuttamaan tiedot ja lähettämään sinulle uusi varmistusviesti.
        </p>
      </span>
      <h3>
        Perustiedot
      </h3>
      <div
        className="formData"
      >
        <LabeledValue
          label="Nimi"
          value="Teemu Testaaja"
        >
          <div
            className="wrapper"
          >
            <strong
              className="label"
            >
              Nimi
            </strong>
            <span
              className="value"
            >
              Teemu Testaaja
            </span>
          </div>
        </LabeledValue>
        <LabeledValue
          label="Kotioisoite"
          value="Testikuja 55, 00100 Helsinki"
        >
          <div
            className="wrapper"
          >
            <strong
              className="label"
            >
              Kotioisoite
            </strong>
            <span
              className="value"
            >
              Testikuja 55, 00100 Helsinki
            </span>
          </div>
        </LabeledValue>
        <LabeledValue
          label="Profiili"
          value="teemu.testaaja@test.fi"
        >
          <div
            className="wrapper"
          >
            <strong
              className="label"
            >
              Profiili
            </strong>
            <span
              className="value"
            >
              teemu.testaaja@test.fi
            </span>
          </div>
        </LabeledValue>
        <LabeledValue
          label="Puhelin"
          value="050123467"
        >
          <div
            className="wrapper"
          >
            <strong
              className="label"
            >
              Puhelin
            </strong>
            <span
              className="value"
            >
              050123467
            </span>
          </div>
        </LabeledValue>
        <LabeledValue
          label="Syntymäpäivä"
          value="01.01.2006"
        >
          <div
            className="wrapper"
          >
            <strong
              className="label"
            >
              Syntymäpäivä
            </strong>
            <span
              className="value"
            >
              01.01.2006
            </span>
          </div>
        </LabeledValue>
      </div>
      <h3>
        Lisätiedot
      </h3>
      <div
        className="formData"
      >
        <LabeledValue
          label="Koulu ja luokka"
          value="Koulu, Luokka"
        >
          <div
            className="wrapper"
          >
            <strong
              className="label"
            >
              Koulu ja luokka
            </strong>
            <span
              className="value"
            >
              Koulu, Luokka
            </span>
          </div>
        </LabeledValue>
        <LabeledValue
          label="Kotona puhutut kielet"
          value="Suomi"
        >
          <div
            className="wrapper"
          >
            <strong
              className="label"
            >
              Kotona puhutut kielet
            </strong>
            <span
              className="value"
            >
              Suomi
            </span>
          </div>
        </LabeledValue>
      </div>
      <h3>
        Huoltajalta vaadittavat luvat
      </h3>
      <h4>
        Kuvauslupa
      </h4>
      <p>
        Lapsestani voi ottaa kuvia ja niitä saa käyttää Helsingin kaupungin sisäisessä ja ulkoisessä viestinnässä.
      </p>
      <Form>
        <form
          action="#"
          onReset={[Function]}
          onSubmit={[Function]}
        >
          <div
            className="formFields"
          >
            <ul
              className="list"
            >
              <li
                className="radioButtonRow"
              >
                <label>
                  <Field
                    id="photoUsageApprovedYes"
                    name="photoUsageApproved"
                    type="radio"
                    value="true"
                  >
                    <input
                      checked={false}
                      id="photoUsageApprovedYes"
                      name="photoUsageApproved"
                      onBlur={[Function]}
                      onChange={[Function]}
                      type="radio"
                      value="true"
                    />
                  </Field>
                  <span
                    className="listLabel"
                  >
                    Kyllä
                  </span>
                </label>
              </li>
              <li
                className="radioButtonRow"
              >
                <label>
                  <Field
                    id="pphotoUsageApprovedNo"
                    name="photoUsageApproved"
                    type="radio"
                    value="false"
                  >
                    <input
                      checked={true}
                      id="pphotoUsageApprovedNo"
                      name="photoUsageApproved"
                      onBlur={[Function]}
                      onChange={[Function]}
                      type="radio"
                      value="false"
                    />
                  </Field>
                  <span
                    className="listLabel"
                  >
                    Ei
                  </span>
                </label>
              </li>
            </ul>
          </div>
          <h3>
            Huoltajan tiedot
          </h3>
          <p>
            Huoltajaan voidaan olla yhteydessä lasta koskevissa asioissa.
          </p>
          <div
            className="formFields"
          >
            <Field
              as={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "render": [Function],
                }
              }
              className="formField"
              helperText=""
              id="approverFirstName"
              invalid={0}
              labelText="Etunimi"
              name="approverFirstName"
            >
              <ForwardRef
                className="formField"
                helperText=""
                id="approverFirstName"
                invalid={0}
                labelText="Etunimi"
                name="approverFirstName"
                onBlur={[Function]}
                onChange={[Function]}
                value="Ville"
              >
                <InputWrapper
                  className="formField"
                  helperText=""
                  id="approverFirstName"
                  invalid={0}
                  labelText="Etunimi"
                >
                  <div
                    className="TextInput-module_root__1ceal text-input_hds-text-input__24bl6 formField"
                  >
                    <FieldLabel
                      hidden={false}
                      inputId="approverFirstName"
                      label="Etunimi"
                      required={false}
                    >
                      <label
                        className="FieldLabel-module_label__2tl-4 text-input_hds-text-input__label__pDw_W "
                        htmlFor="approverFirstName"
                      >
                        Etunimi
                      </label>
                    </FieldLabel>
                    <div
                      className="TextInput-module_inputWrapper__1ru3h text-input_hds-text-input__input-wrapper__2p7Uy"
                    >
                      <input
                        className="TextInput-module_input__35GDy text-input_hds-text-input__input__2XAyI"
                        disabled={false}
                        id="approverFirstName"
                        name="approverFirstName"
                        onBlur={[Function]}
                        onChange={[Function]}
                        type="text"
                        value="Ville"
                      />
                    </div>
                  </div>
                </InputWrapper>
              </ForwardRef>
            </Field>
            <Field
              as={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "render": [Function],
                }
              }
              className="formField"
              helperText=""
              id="approverLastName"
              invalid={0}
              labelText="Sukunimi"
              name="approverLastName"
            >
              <ForwardRef
                className="formField"
                helperText=""
                id="approverLastName"
                invalid={0}
                labelText="Sukunimi"
                name="approverLastName"
                onBlur={[Function]}
                onChange={[Function]}
                value="Vanhempi"
              >
                <InputWrapper
                  className="formField"
                  helperText=""
                  id="approverLastName"
                  invalid={0}
                  labelText="Sukunimi"
                >
                  <div
                    className="TextInput-module_root__1ceal text-input_hds-text-input__24bl6 formField"
                  >
                    <FieldLabel
                      hidden={false}
                      inputId="approverLastName"
                      label="Sukunimi"
                      required={false}
                    >
                      <label
                        className="FieldLabel-module_label__2tl-4 text-input_hds-text-input__label__pDw_W "
                        htmlFor="approverLastName"
                      >
                        Sukunimi
                      </label>
                    </FieldLabel>
                    <div
                      className="TextInput-module_inputWrapper__1ru3h text-input_hds-text-input__input-wrapper__2p7Uy"
                    >
                      <input
                        className="TextInput-module_input__35GDy text-input_hds-text-input__input__2XAyI"
                        disabled={false}
                        id="approverLastName"
                        name="approverLastName"
                        onBlur={[Function]}
                        onChange={[Function]}
                        type="text"
                        value="Vanhempi"
                      />
                    </div>
                  </div>
                </InputWrapper>
              </ForwardRef>
            </Field>
            <Field
              as={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "render": [Function],
                }
              }
              className="formField"
              helperText=""
              id="approverEmail"
              invalid={0}
              labelText="Sähköposti"
              name="approverEmail"
              type="email"
            >
              <ForwardRef
                className="formField"
                helperText=""
                id="approverEmail"
                invalid={0}
                labelText="Sähköposti"
                name="approverEmail"
                onBlur={[Function]}
                onChange={[Function]}
                type="email"
                value="ville.vanhempi@test.fi"
              >
                <InputWrapper
                  className="formField"
                  helperText=""
                  id="approverEmail"
                  invalid={0}
                  labelText="Sähköposti"
                >
                  <div
                    className="TextInput-module_root__1ceal text-input_hds-text-input__24bl6 formField"
                  >
                    <FieldLabel
                      hidden={false}
                      inputId="approverEmail"
                      label="Sähköposti"
                      required={false}
                    >
                      <label
                        className="FieldLabel-module_label__2tl-4 text-input_hds-text-input__label__pDw_W "
                        htmlFor="approverEmail"
                      >
                        Sähköposti
                      </label>
                    </FieldLabel>
                    <div
                      className="TextInput-module_inputWrapper__1ru3h text-input_hds-text-input__input-wrapper__2p7Uy"
                    >
                      <input
                        className="TextInput-module_input__35GDy text-input_hds-text-input__input__2XAyI"
                        disabled={false}
                        id="approverEmail"
                        name="approverEmail"
                        onBlur={[Function]}
                        onChange={[Function]}
                        type="email"
                        value="ville.vanhempi@test.fi"
                      />
                    </div>
                  </div>
                </InputWrapper>
              </ForwardRef>
            </Field>
            <Field
              as={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "render": [Function],
                }
              }
              className="formField"
              helperText=""
              id="approverPhone"
              invalid={0}
              labelText="Puhelin"
              name="approverPhone"
              type="tel"
            >
              <ForwardRef
                className="formField"
                helperText=""
                id="approverPhone"
                invalid={0}
                labelText="Puhelin"
                name="approverPhone"
                onBlur={[Function]}
                onChange={[Function]}
                type="tel"
                value="05012345567"
              >
                <InputWrapper
                  className="formField"
                  helperText=""
                  id="approverPhone"
                  invalid={0}
                  labelText="Puhelin"
                >
                  <div
                    className="TextInput-module_root__1ceal text-input_hds-text-input__24bl6 formField"
                  >
                    <FieldLabel
                      hidden={false}
                      inputId="approverPhone"
                      label="Puhelin"
                      required={false}
                    >
                      <label
                        className="FieldLabel-module_label__2tl-4 text-input_hds-text-input__label__pDw_W "
                        htmlFor="approverPhone"
                      >
                        Puhelin
                      </label>
                    </FieldLabel>
                    <div
                      className="TextInput-module_inputWrapper__1ru3h text-input_hds-text-input__input-wrapper__2p7Uy"
                    >
                      <input
                        className="TextInput-module_input__35GDy text-input_hds-text-input__input__2XAyI"
                        disabled={false}
                        id="approverPhone"
                        name="approverPhone"
                        onBlur={[Function]}
                        onChange={[Function]}
                        type="tel"
                        value="05012345567"
                      />
                    </div>
                  </div>
                </InputWrapper>
              </ForwardRef>
            </Field>
          </div>
          <ul
            className="terms"
          >
            <Field
              as={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "render": [Function],
                }
              }
              labelText={
                <span
                  className="listLabel"
                >
                  <Trans
                    components={
                      Array [
                        <a
                          href="https://www.hel.fi/static/liitteet/kanslia/rekisteriselosteet/Kuva/Kuva-EU-Nuorisopalvelujen-jasenrekisteri.pdf"
                          rel="noopener noreferrer"
                          target="_blank"
                        />,
                        <a
                          href="TÄHÄN TAVITAAN LINKKI"
                          rel="noopener noreferrer"
                          target="_blank"
                        />,
                      ]
                    }
                    i18nKey="approval.approveTerms"
                  />
                </span>
              }
              name="terms"
              type="checkbox"
            >
              <ForwardRef
                checked={false}
                labelText={
                  <span
                    className="listLabel"
                  >
                    <Trans
                      components={
                        Array [
                          <a
                            href="https://www.hel.fi/static/liitteet/kanslia/rekisteriselosteet/Kuva/Kuva-EU-Nuorisopalvelujen-jasenrekisteri.pdf"
                            rel="noopener noreferrer"
                            target="_blank"
                          />,
                          <a
                            href="TÄHÄN TAVITAAN LINKKI"
                            rel="noopener noreferrer"
                            target="_blank"
                          />,
                        ]
                      }
                      i18nKey="approval.approveTerms"
                    />
                  </span>
                }
                name="terms"
                onBlur={[Function]}
                onChange={[Function]}
                type="checkbox"
                value={false}
              >
                <div
                  className="Checkbox-module_checkbox__3L0GR checkbox_hds-checkbox__9HMCz"
                >
                  <input
                    aria-checked={false}
                    checked={false}
                    className="Checkbox-module_input__3VZvy checkbox_hds-checkbox__input__1w0pu"
                    disabled={false}
                    name="terms"
                    onBlur={[Function]}
                    onChange={[Function]}
                    type="checkbox"
                    value={false}
                  />
                  <label
                    className="Checkbox-module_label__L5AN1 checkbox_hds-checkbox__label__3HoD3"
                  >
                    <span
                      className="listLabel"
                    >
                      <Trans
                        components={
                          Array [
                            <a
                              href="https://www.hel.fi/static/liitteet/kanslia/rekisteriselosteet/Kuva/Kuva-EU-Nuorisopalvelujen-jasenrekisteri.pdf"
                              rel="noopener noreferrer"
                              target="_blank"
                            />,
                            <a
                              href="TÄHÄN TAVITAAN LINKKI"
                              rel="noopener noreferrer"
                              target="_blank"
                            />,
                          ]
                        }
                        i18nKey="approval.approveTerms"
                      >
                        Olen tutustunut palvelun 
                        <a
                          href="https://www.hel.fi/static/liitteet/kanslia/rekisteriselosteet/Kuva/Kuva-EU-Nuorisopalvelujen-jasenrekisteri.pdf"
                          key="1"
                          rel="noopener noreferrer"
                          target="_blank"
                        >
                          rekisteriselosteeseen
                        </a>
                         ja kaupungin 
                        <a
                          href="TÄHÄN TAVITAAN LINKKI"
                          key="3"
                          rel="noopener noreferrer"
                          target="_blank"
                        >
                          tietosuojakäytäntöön
                        </a>
                          ja että minuun voidaan olla yhteydessä antamaani osoitteeseen.
                      </Trans>
                    </span>
                  </label>
                </div>
              </ForwardRef>
            </Field>
          </ul>
          <div
            className="buttonAlign"
          >
            <ForwardRef
              className="button"
              disabled={true}
              type="submit"
            >
              <button
                className="Button-module_button__3wgee button_hds-button__2A0je Button-module_primary__3bo_T button_hds-button--primary__2NVvO button"
                disabled={true}
                type="submit"
              >
                <span
                  className="Button-module_label__2zMLC button_hds-button__label__2EQa-"
                >
                  Hyväksy jäsenyys
                </span>
              </button>
            </ForwardRef>
          </div>
        </form>
      </Form>
    </div>
  </Formik>
</ApproveYouthProfileForm>
`;
